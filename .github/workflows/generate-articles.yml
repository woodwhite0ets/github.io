name: Generate Articles

on:
  push:
    paths:
      - 'posts/**'  # 当 posts 文件夹有变化时触发1

jobs:
  generate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Install dependencies
        run: npm install @xmldom/xmldom
      
      - name: Generate articles.json
        run: |
          node <<EOF
          const fs = require('fs');
          const path = require('path');
          const { DOMParser } = require('@xmldom/xmldom');
          
          const postsDir = path.join(__dirname, 'posts');
          
          // 读取目录中的所有文件
          fs.readdir(postsDir, (err, files) => {
            if (err) {
              console.error('Error reading posts directory:', err);
              return;
            }
            
            const articles = files
              .filter(file => path.extname(file) === '.html') // 只处理 HTML 文件
              .map(file => {
                const filePath = path.join(postsDir, file);
                try {
                  const content = fs.readFileSync(filePath, 'utf8');
                  const doc = new DOMParser().parseFromString(content, 'text/html');
                  
                  // 提取元数据
                  const date = doc.querySelector('meta[name="date"]')?.getAttribute('content');
                  const title = doc.querySelector('meta[name="title"]')?.getAttribute('content');
                  
                  if (!date || !title) {
                    console.warn(`Missing date or title in ${file}`);
                    return null;
                  }
                  
                  return {
                    date,
                    title,
                    url: `./posts/${file}`
                  };
                } catch (error) {
                  console.error(`Error parsing ${file}:`, error);
                  return null;
                }
              })
              .filter(article => article !== null) // 过滤掉解析失败的文章
              .sort((a, b) => new Date(b.date) - new Date(a.date)); // 按日期降序排序
              
            // 写入 JSON 文件
            fs.writeFileSync('articles.json', JSON.stringify(articles, null, 2));
            console.log('✅ Articles list generated successfully');
          });
          EOF
      
      - name: Commit and push changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add articles.json
          # 只有文件有变化时才提交
          if ! git diff --cached --quiet; then
            git commit -m 'Update articles.json'
            git push
          else
            console.log('No changes to commit')
          fi
